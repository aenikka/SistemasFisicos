void setup()
{
  Serial.begin(115200);
}

void SendSignal()
{
   // Una seÃ±al cada 1HZ, analog al 50%
  //int val = analogRead(0);
  //val = map(val, 0, 1023, 0, 255);
  //analogWrite(9, val);
}

void Bomb()
{

  enum class BombState {SETUP, ACTIVATED};
  static uint8_t counter = 20;
  static BombState bombstate =  BombState::SETUP;
  static uint32_t previousMillis = 0;
  const uint32_t interval = 1000;
  int rightpassword[] = {'d', 'u', 'd', 'd', 'u', 'a'};
  int answer[6];
  static bool isCorrect = false;


  switch (bombstate)
  {

    case  BombState::SETUP:
      {

        //condicional para leer los eventos que quiera evaluar
        //UP,DOWN,ARM
        if (Serial.available() > 0) {
          int dataRx = Serial.read();

          if (dataRx == 'u')
          {
            if (counter < 60)
            {
              counter++;
              Serial.println(counter);
            }
          }
          else if (dataRx == 'd')
          {
            if (counter > 10)
            {
              counter--;
              Serial.println(counter);
            }
          }
          else if (dataRx == 'a')
          {
            bombstate = BombState::ACTIVATED;
            previousMillis = millis();

          }

        }

        break;
      }


    case BombState::ACTIVATED:
      {
        //Countdown
        if (millis() - previousMillis >= interval)
        {
          counter --;
          previousMillis = millis();
          Serial.println(counter);

          if (counter == 0)
          {
            bombstate = BombState::SETUP;
            Serial.println("KABOOM!");
            counter = 20;
          }


        }
        //Option to defuse bomb
        if (Serial.available() > 0)
        {

          int input0 = Serial.read();
          answer[0] = input0;
          Serial.println(answer[0]);

          int input1 = Serial.read();
          answer[1] = input1;
          Serial.println(answer[1]);


          int input2 = Serial.read();
          answer[2] = input2;
          Serial.println(answer[2]);


          int input3 = Serial.read();
          answer[3] = input3;
          Serial.println(answer[3]);


          int input4 = Serial.read();
          answer[4] = input4;
          Serial.println(answer[4]);


          int input5 = Serial.read();
          answer[5] = input5;
          Serial.println(answer[5]);


          if (answer[5] != NULL)
          {
            for (int i = 1; i < 6; ++i)
            {
              if (answer[i] != rightpassword[i])
              {
                isCorrect = false;;
                break;
              }
            }

            if (isCorrect == true)
              printf("Arrays are equal");

          }





        }

      }



      break;

    default:
      Serial.println("Error");
      break;

  }
}











void loop() {
  Bomb();
  SendSignal();

}
